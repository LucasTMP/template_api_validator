name: pipeline for CI

on: 
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:

  analyze:
    name: Analyze Static Code
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
        
  build:
    name: Test Execution
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: ADD .NET Core SDK ${{ matrix.dotnet-version }} (dotnet)
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
         
      - name: running unit and integration tests
        run: dotnet test src/Template.Validator.Tests/Template.Validator.Tests.csproj
        
  horusec-security:
    name: Scan Code With Horusec
    runs-on: ubuntu-latest
    strategy:
      matrix:
        horusec-version: ['latest']
        
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Running Horusec Security
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s ${{horusec-version}}
          horusec start -p="./" -e="true"
